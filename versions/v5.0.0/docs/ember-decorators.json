{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"ember-decorators","attributes":{"name":"ember-decorators","version":"5.0.0","navigationIndex":[{"type":"modules","items":[{"id":"@ember-decorators/component","path":"modules/@ember-decorators/component","name":"@ember-decorators/component"},{"id":"@ember-decorators/controller","path":"modules/@ember-decorators/controller","name":"@ember-decorators/controller"},{"id":"@ember-decorators/data","path":"modules/@ember-decorators/data","name":"@ember-decorators/data"},{"id":"@ember-decorators/object","path":"modules/@ember-decorators/object","name":"@ember-decorators/object"},{"id":"@ember-decorators/object/computed","path":"modules/@ember-decorators/object/computed","name":"@ember-decorators/object/computed"},{"id":"@ember-decorators/service","path":"modules/@ember-decorators/service","name":"@ember-decorators/service"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"@ember-decorators/component"},{"type":"module","id":"@ember-decorators/controller"},{"type":"module","id":"@ember-decorators/data"},{"type":"module","id":"@ember-decorators/object"},{"type":"module","id":"@ember-decorators/object/computed"},{"type":"module","id":"@ember-decorators/service"}]}}},"included":[{"type":"module","id":"@ember-decorators/component","attributes":{"file":"@ember-decorators/component","functions":[{"name":"attribute","description":"<div class=\"docs-md\"><p>Decorator which indicates that the field or computed should be bound\nto an attribute value on the component. This replaces <code>attributeBindings</code>\nby directly allowing you to specify which properties should be bound.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AttributeDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  @attribute role = <span class=\"hljs-string\">'button'</span>;\n\n  <span class=\"hljs-comment\">// With provided attribute name</span>\n  @attribute(<span class=\"hljs-string\">'data-foo'</span>) foo = <span class=\"hljs-string\">'lol'</span>;\n\n  @attribute\n  @computed\n  get id() {\n    <span class=\"hljs-comment\">// return generated id</span>\n  }\n}</code></pre></div>","lineNumber":32,"access":"public","tags":[],"file":"@ember-decorators/component","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"name?","description":"The name of the attribute to bind the value to if it is truthy","type":"string"}],"exportType":"named"},{"name":"className","description":"<div class=\"docs-md\"><p>Decorator which indicates that the field or computed should be bound to\nthe component class names. This replaces <code>classNameBindings</code> by directly\nallowing you to specify which properties should be bound.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ClassNameDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  @className boundField = <span class=\"hljs-string\">'default-class'</span>;\n\n  <span class=\"hljs-comment\">// With provided true/false class names</span>\n  @className(<span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'inactive'</span>) isActive = <span class=\"hljs-literal\">true</span>;\n\n  @className\n  @computed\n  get boundComputed() {\n    <span class=\"hljs-comment\">// return generated class</span>\n  }\n}</code></pre></div>","lineNumber":97,"access":"public","tags":[],"file":"@ember-decorators/component","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"truthyName?","description":"The class to be applied if the value the field\n                              is truthy, defaults to the name of the field.","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"falsyName?","description":"The class to be applied if the value of the field\n                             is falsy.","type":"string"}],"exportType":"named"},{"name":"classNames","description":"<div class=\"docs-md\"><p>Class decorator which specifies the class names to be applied to a component.\nThis replaces the <code>classNames</code> property on components in the traditional Ember\nobject model.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\">@classNames(<span class=\"hljs-string\">'a-static-class'</span>, <span class=\"hljs-string\">'another-static-class'</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ClassNamesDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{}</code></pre></div>","lineNumber":149,"access":"public","tags":[],"file":"@ember-decorators/component","returns":null,"params":[{"nullable":null,"spread":true,"optional":false,"name":"classNames","description":"The list of classes to be applied to the component","type":"...string"}],"exportType":"named"},{"name":"tagName","description":"<div class=\"docs-md\"><p>Class decorator which specifies the tag name of the component. This replaces\nthe <code>tagName</code> property on components in the traditional Ember object model.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\">@tagName(<span class=\"hljs-string\">'button'</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TagNameDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{}</code></pre></div>","lineNumber":185,"access":"public","tags":[],"file":"@ember-decorators/component","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"tagName","description":"The HTML tag to be used for the component","type":"string"}],"exportType":"named"},{"name":"layout","description":"<div class=\"docs-md\"><p>Class decorator which specifies the layout for the component. This replaces\nthe <code>layout</code> property on components in the traditional Ember object model.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../templates/components/x-foo'</span>;\n\n@layout(template)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TagNameDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{}</code></pre>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">import</span> hbs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'htmlbars-inline-precompile'</span>;\n\n@layout(hbs<span class=\"hljs-string\">`&lt;h1&gt;Hello {{ name }}&lt;/h1&gt;`</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TagNameDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-keyword\">constructor</span>() {\n    <span class=\"hljs-keyword\">super</span>(...arguments);\n    <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'Tomster'</span>);\n  }\n}</code></pre></div>","lineNumber":231,"access":"public","tags":[],"file":"@ember-decorators/component","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"template","description":"The compiled template to be used for the component","type":"TemplateFactory"}],"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"@ember-decorators/controller","attributes":{"file":"@ember-decorators/controller","functions":[{"name":"inject","description":"<div class=\"docs-md\"><p>Decorator that injects a controller into a controller as the decorated\nproperty</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> Controller <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember/controller'</span>;\n<span class=\"hljs-keyword\">import</span> { inject <span class=\"hljs-keyword\">as</span> controller } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/controller'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">IndexController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Controller</span> </span>{\n  @controller application;\n}</code></pre></div>","lineNumber":21,"access":"public","tags":[],"file":"@ember-decorators/controller","returns":{"type":"Controller","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"controllerName?","description":"The name of the controller to inject. If not provided, the property name will be used","type":"string"}],"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"@ember-decorators/data","attributes":{"file":"@ember-decorators/data","functions":[{"name":"attr","description":"<div class=\"docs-md\"><p>Decorator that turns the property into an Ember Data attribute</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Model</span> </span>{\n  @attr firstName;\n\n  @attr(<span class=\"hljs-string\">'string'</span>) lastName;\n\n  @attr(<span class=\"hljs-string\">'number'</span>, { <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-number\">0</span> })\n  age;\n}</code></pre></div>","lineNumber":22,"access":"public","tags":[],"file":"@ember-decorators/data","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"type?","description":"Type of the attribute","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"options?","description":"Options for the attribute","type":"object"}],"exportType":"named"},{"name":"hasMany","description":"<div class=\"docs-md\"><p>Decorator that turns the property into an Ember Data <code>hasMany</code> relationship</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">User</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Model</span> </span>{\n  @hasMany posts;\n\n  @hasMany(<span class=\"hljs-string\">'user'</span>) friends;\n\n  @hasMany(<span class=\"hljs-string\">'user'</span>, { <span class=\"hljs-attr\">async</span>: <span class=\"hljs-literal\">false</span> })\n  followers;\n}</code></pre></div>","lineNumber":42,"access":"public","tags":[],"file":"@ember-decorators/data","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"type?","description":"Type of relationship","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"options?","description":"Options for the relationship","type":"object"}],"exportType":"named"},{"name":"belongsTo","description":"<div class=\"docs-md\"><p>Decorator that turns the property into an Ember Data <code>belongsTo</code> relationship</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Post</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Model</span> </span>{\n  @belongsTo user;\n\n  @belongsTo(<span class=\"hljs-string\">'user'</span>) editor\n\n  @belongsTo(<span class=\"hljs-string\">'post'</span>, { <span class=\"hljs-attr\">async</span>: <span class=\"hljs-literal\">false</span> })\n  parentPost;\n}</code></pre></div>","lineNumber":61,"access":"public","tags":[],"file":"@ember-decorators/data","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"type?","description":"Type of the relationship","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"options?","description":"Type of the relationship","type":"object"}],"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"@ember-decorators/object","attributes":{"file":"@ember-decorators/object","functions":[{"name":"action","description":"<div class=\"docs-md\"><p>Decorator that turns the target function into an Action</p>\n<p>Adds an <code>actions</code> object to the target object and creates a passthrough\nfunction that calls the original. This means the function still exists\non the original object, and can be used directly.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ActionDemoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  @action\n  foo() {\n    <span class=\"hljs-comment\">// do something</span>\n  }\n}</code></pre>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-comment\">&lt;!-- template.hbs --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=</span></span><span class=\"hljs-template-variable\">{{<span class=\"hljs-builtin-name\">action</span> \"foo\"}}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>Execute foo action<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span></code></pre>\n<p>Also binds the function directly to the instance, so it can be used in any\ncontext:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\"><span class=\"hljs-comment\">&lt;!-- template.hbs --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=</span></span><span class=\"hljs-template-variable\">{{this.foo}}</span><span class=\"xml\"><span class=\"hljs-tag\">&gt;</span>Execute foo action<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span></span></code></pre></div>","lineNumber":47,"access":"public","tags":[],"file":"@ember-decorators/object","returns":{"type":"Function","description":"","properties":[]},"params":[],"exportType":"named"},{"name":"computed","description":"<div class=\"docs-md\"><p>Decorator that turns a native getter/setter into a computed property. Note\nthat though they use getters and setters, you must still use the Ember <code>get</code>/\n<code>set</code> functions to get and set their values.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">import</span> Component <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember/component'</span>;\n<span class=\"hljs-keyword\">import</span> { computed } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/object'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  first = <span class=\"hljs-string\">'Bruce'</span>;\n  last = <span class=\"hljs-string\">'Wayne'</span>;\n\n  @computed(<span class=\"hljs-string\">'first'</span>, <span class=\"hljs-string\">'last'</span>)\n  get name() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this</span>.first}</span> <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this</span>.last}</span>`</span>; <span class=\"hljs-comment\">// =&gt; 'Bruce Wayne'</span>\n  }\n\n  set name(value) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> value !== <span class=\"hljs-string\">'string'</span> || !value.test(<span class=\"hljs-regexp\">/^[a-z]+ [a-z]+$/i</span>)) {\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">TypeError</span>(<span class=\"hljs-string\">'Invalid name'</span>);\n    }\n\n    <span class=\"hljs-keyword\">const</span> [first, last] = value.split(<span class=\"hljs-string\">' '</span>);\n    <span class=\"hljs-keyword\">this</span>.setProperties({ first, last });\n  }\n}</code></pre>\n<p>Can also be optionally passed a computed property descriptor (e.g. a function\nor an object with <code>get</code> and <code>set</code> functions on it):</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">let</span> fullNameComputed = computed(<span class=\"hljs-string\">'firstName'</span>, <span class=\"hljs-string\">'lastName'</span>, {\n  get() {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this</span>.first}</span> <span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this</span>.last}</span>`</span>; <span class=\"hljs-comment\">// =&gt; 'Diana Prince'</span>\n  },\n\n  set(key, value) {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> value !== <span class=\"hljs-string\">'string'</span> || !value.test(<span class=\"hljs-regexp\">/^[a-z]+ [a-z]+$/i</span>)) {\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">TypeError</span>(<span class=\"hljs-string\">'Invalid name'</span>);\n    }\n\n    <span class=\"hljs-keyword\">const</span> [first, last] = value.split(<span class=\"hljs-string\">' '</span>);\n    <span class=\"hljs-keyword\">this</span>.setProperties({ first, last });\n\n    <span class=\"hljs-keyword\">return</span> value;\n  }\n})\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  first = <span class=\"hljs-string\">'Diana'</span>;\n  last = <span class=\"hljs-string\">'Prince'</span>;\n\n  @fullNameComputed fullName;\n}</code></pre></div>","lineNumber":157,"access":"public","tags":[],"file":"@ember-decorators/object","returns":{"type":"ComputedProperty","description":"","properties":[]},"params":[{"nullable":null,"spread":true,"optional":false,"name":"propertyNames","description":"List of property keys this computed is dependent on","type":"...string"}],"exportType":"named"},{"name":"observes","description":"<div class=\"docs-md\"><p>Triggers the target function when the dependent properties have changed</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> { observes } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/object'</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Foo</span> </span>{\n  @observes(<span class=\"hljs-string\">'foo'</span>)\n  bar() {\n    <span class=\"hljs-comment\">//...</span>\n  }\n}</code></pre></div>","lineNumber":240,"access":"public","tags":[],"file":"@ember-decorators/object","returns":null,"params":[{"nullable":null,"spread":true,"optional":false,"name":"propertyNames","description":"Names of the properties that trigger the function","type":"...String"}],"exportType":"named"},{"name":"unobserves","description":"<div class=\"docs-md\"><p>Removes observers from the target function.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> { observes, unobserves } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/object'</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Foo</span> </span>{\n  @observes(<span class=\"hljs-string\">'foo'</span>)\n  bar() {\n    <span class=\"hljs-comment\">//...</span>\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Bar</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Foo</span> </span>{\n  @unobserves(<span class=\"hljs-string\">'foo'</span>) bar;\n}</code></pre></div>","lineNumber":280,"access":"public","tags":[],"file":"@ember-decorators/object","returns":null,"params":[{"nullable":null,"spread":true,"optional":false,"name":"propertyNames","description":"Names of the properties that no longer trigger the function","type":"...String"}],"exportType":"named"},{"name":"on","description":"<div class=\"docs-md\"><p>Adds an event listener to the target function.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> { on } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/object'</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Foo</span> </span>{\n  @on(<span class=\"hljs-string\">'fooEvent'</span>, <span class=\"hljs-string\">'barEvent'</span>)\n  bar() {\n    <span class=\"hljs-comment\">//...</span>\n  }\n}</code></pre></div>","lineNumber":311,"access":"public","tags":[],"file":"@ember-decorators/object","returns":null,"params":[{"nullable":null,"spread":true,"optional":false,"name":"eventNames","description":"Names of the events that trigger the function","type":"...String"}],"exportType":"named"},{"name":"off","description":"<div class=\"docs-md\"><p>Removes an event listener from the target function.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> { on, off } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/object'</span>;\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Foo</span> </span>{\n  @on(<span class=\"hljs-string\">'fooEvent'</span>, <span class=\"hljs-string\">'barEvent'</span>)\n  bar() {\n    <span class=\"hljs-comment\">//...</span>\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Bar</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Foo</span> </span>{\n  @off(<span class=\"hljs-string\">'fooEvent'</span>, <span class=\"hljs-string\">'barEvent'</span>) bar;\n}</code></pre></div>","lineNumber":351,"access":"public","tags":[],"file":"@ember-decorators/object","returns":null,"params":[{"nullable":null,"spread":true,"optional":false,"name":"eventNames","description":"Names of the events that no longer trigger the function","type":"...String"}],"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"@ember-decorators/object/computed","attributes":{"file":"@ember-decorators/object/computed","functions":[{"name":"alias","description":"<div class=\"docs-md\"><p>Creates a new property that is an alias for another property on an object.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/alias\"  class=\"docs-md__a\">alias</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  person = {\n    <span class=\"hljs-attr\">first</span>: <span class=\"hljs-string\">'Joe'</span>\n  };\n\n  @alias(<span class=\"hljs-string\">'person.first'</span>) firstName;\n}</code></pre></div>","lineNumber":81,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the aliased property","type":"string"}],"exportType":"named"},{"name":"and","description":"<div class=\"docs-md\"><p>A computed property that performs a logical and on the original values for the\nprovided dependent properties.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/and\"  class=\"docs-md__a\">and</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  person = {\n    <span class=\"hljs-attr\">first</span>: <span class=\"hljs-string\">'Joe'</span>\n  };\n\n  @and(<span class=\"hljs-string\">'person.{first,last}'</span>) hasFullName; <span class=\"hljs-comment\">// false</span>\n}</code></pre></div>","lineNumber":103,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":true,"optional":false,"name":"dependentKeys","description":"Keys for the properties to `and`","type":"...string"}],"exportType":"named"},{"name":"bool","description":"<div class=\"docs-md\"><p>A computed property that converts the provided dependent property into a\nboolean value.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/bool\"  class=\"docs-md__a\">bool</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MessagesNotificationComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  messageCount = <span class=\"hljs-number\">1</span>;\n\n  @bool(<span class=\"hljs-string\">'messageCount'</span>) hasMessages; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":123,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to convert","type":"string"}],"exportType":"named"},{"name":"collect","description":"<div class=\"docs-md\"><p>A computed property that returns the array of values for the provided\ndependent properties.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/collect\"  class=\"docs-md__a\">collect</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CameraEquipmentComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  light = <span class=\"hljs-string\">'strobe'</span>;\n  lens = <span class=\"hljs-string\">'35mm prime'</span>;\n\n  @collect(<span class=\"hljs-string\">'light'</span>, <span class=\"hljs-string\">'lens'</span>) equipment; <span class=\"hljs-comment\">// ['strobe', '35mm prime']</span>\n}</code></pre></div>","lineNumber":144,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":true,"optional":false,"name":"dependentKeys","description":"Keys for the properties to collect","type":"...string"}],"exportType":"named"},{"name":"deprecatingAlias","description":"<div class=\"docs-md\"><p>Creates a new property that is an alias for another property on an object.\nCalls to get or set this property behave as though they were called on\nthe original property, but will also trigger a deprecation warning.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/deprecatingAlias\"  class=\"docs-md__a\">deprecatingAlias</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> </span>{\n  person = {\n    <span class=\"hljs-attr\">first</span>: <span class=\"hljs-string\">'Joe'</span>\n  };\n\n  @deprecatingAlias(<span class=\"hljs-string\">'person.first'</span>, {\n    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">'user-profile.firstName'</span>,\n    <span class=\"hljs-attr\">until</span>: <span class=\"hljs-string\">'3.0.0'</span>,\n    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">'https://example.com/deprecations/user-profile.firstName'</span>\n  }) firstName;\n}</code></pre></div>","lineNumber":171,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":null,"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to alias","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"options","description":"","type":"object"}],"exportType":"named"},{"name":"empty","description":"<div class=\"docs-md\"><p>A computed property that returns <code>true</code> if the value of the dependent\nproperty is null, an empty string, empty array, or empty function.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/empty\"  class=\"docs-md__a\">empty</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FoodItemsComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  items = [<span class=\"hljs-string\">'taco'</span>, <span class=\"hljs-string\">'burrito'</span>];\n\n  @empty(<span class=\"hljs-string\">'items'</span>) isEmpty; <span class=\"hljs-comment\">// false</span>\n}</code></pre></div>","lineNumber":191,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key of the property to check emptiness of","type":"string"}],"exportType":"named"},{"name":"equal","description":"<div class=\"docs-md\"><p>A computed property that returns true if the dependent properties are equal.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/equal\"  class=\"docs-md__a\">equal</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NapTimeComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  state = <span class=\"hljs-string\">'sleepy'</span>;\n\n  @equal(<span class=\"hljs-string\">'state'</span>, <span class=\"hljs-string\">'sleepy'</span>) napTime; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":211,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to check","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"value","description":"Value to compare the dependent property to","type":"any"}],"exportType":"named"},{"name":"filter","description":"<div class=\"docs-md\"><p>Filters the items in the array by the provided callback.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/filter\"  class=\"docs-md__a\">filter</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ChoresListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  chores = [\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'cook'</span>, <span class=\"hljs-attr\">done</span>: <span class=\"hljs-literal\">true</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'clean'</span>, <span class=\"hljs-attr\">done</span>: <span class=\"hljs-literal\">true</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'write more unit tests'</span>, <span class=\"hljs-attr\">done</span>: <span class=\"hljs-literal\">false</span> }\n  ];\n\n  @filter(<span class=\"hljs-string\">'chores'</span>)\n  remainingChores(chore, index, array) {\n    <span class=\"hljs-keyword\">return</span> !chore.done;\n  } <span class=\"hljs-comment\">// [{name: 'write more unit tests', done: false}]</span>\n\n  <span class=\"hljs-comment\">// alternative syntax:</span>\n\n  @filter(<span class=\"hljs-string\">'chores'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chore, index, array</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> !chore.done;\n  }) remainingChores; <span class=\"hljs-comment\">// [{name: 'write more unit tests', done: false}]</span>\n}</code></pre></div>","lineNumber":244,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the array to filter","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"callback?","description":"The function to filter with","type":" (item: any, index: number, array: any[]) => boolean"}],"exportType":"named"},{"name":"filterBy","description":"<div class=\"docs-md\"><p>Filters the array by the property and value.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/filterBy\"  class=\"docs-md__a\">filter</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ChoresListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  chores = [\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'cook'</span>, <span class=\"hljs-attr\">done</span>: <span class=\"hljs-literal\">true</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'clean'</span>, <span class=\"hljs-attr\">done</span>: <span class=\"hljs-literal\">true</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'write more unit tests'</span>, <span class=\"hljs-attr\">done</span>: <span class=\"hljs-literal\">false</span> }\n  ];\n\n  @filterBy(<span class=\"hljs-string\">'chores'</span>, <span class=\"hljs-string\">'done'</span>, <span class=\"hljs-literal\">false</span>) remainingChores; <span class=\"hljs-comment\">// [{name: 'write more unit tests', done: false}]</span>\n}</code></pre></div>","lineNumber":269,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the array to filter","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"propertyKey","description":"Property of the array items to filter by","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"value","description":"Value to filter by","type":"any"}],"exportType":"named"},{"name":"gt","description":"<div class=\"docs-md\"><p>A computed property that returns <code>true</code> if the provided dependent property\nis strictly greater than the provided value.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/gt\"  class=\"docs-md__a\">gt</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CatPartyComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  totalCats = <span class=\"hljs-number\">11</span>;\n\n  @gt(<span class=\"hljs-string\">'totalCats'</span>, <span class=\"hljs-number\">10</span>) isCatParty; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":290,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to compare","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"value","description":"Value to compare against","type":"number"}],"exportType":"named"},{"name":"gte","description":"<div class=\"docs-md\"><p>A computed property that returns <code>true</code> if the provided dependent property\nis greater than or equal to the provided value.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/gte\"  class=\"docs-md__a\">gte</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  totalPlayers = <span class=\"hljs-number\">14</span>;\n\n  @gte(<span class=\"hljs-string\">'totalPlayers'</span>, <span class=\"hljs-number\">14</span>) hasEnoughPlayers; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":311,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to compare","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"value","description":"Value to compare against","type":"number"}],"exportType":"named"},{"name":"intersect","description":"<div class=\"docs-md\"><p>A computed property which returns a new array with all the duplicated elements\nfrom two or more dependent arrays.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/intersect\"  class=\"docs-md__a\">intersect</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FoodListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  likes = [ <span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'puppies'</span>, <span class=\"hljs-string\">'pizza'</span> ];\n  foods = [<span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'pizza'</span>];\n\n  @intersect(<span class=\"hljs-string\">'likes'</span>, <span class=\"hljs-string\">'foods'</span>) favoriteFoods; <span class=\"hljs-comment\">// ['tacos', 'pizza']</span>\n}</code></pre></div>","lineNumber":332,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":true,"optional":false,"name":"dependentKeys","description":"Keys of the arrays to intersect","type":"...string"}],"exportType":"named"},{"name":"lt","description":"<div class=\"docs-md\"><p>A computed property that returns <code>true</code> if the provided dependent property\nis strictly less than the provided value.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/lt\"  class=\"docs-md__a\">lt</a> macro</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DogPartyComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  totalDogs = <span class=\"hljs-number\">3</span>;\n\n  @lt(<span class=\"hljs-string\">'totalDogs'</span>, <span class=\"hljs-number\">10</span>) isDogParty; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":353,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to compare","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"value","description":"Value to compare against","type":"number"}],"exportType":"named"},{"name":"lte","description":"<div class=\"docs-md\"><p>A computed property that returns <code>true</code> if the provided dependent property\nis less than or equal to the provided value.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/lte\"  class=\"docs-md__a\">lte</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PlayerListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  totalPlayers = <span class=\"hljs-number\">14</span>;\n\n  @lte(<span class=\"hljs-string\">'totalPlayers'</span>, <span class=\"hljs-number\">14</span>) hasEnoughPlayers; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":374,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to compare","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"value","description":"Value to compare against","type":"number"}],"exportType":"named"},{"name":"map","description":"<div class=\"docs-md\"><p>Returns an array mapped via the callback.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/map\"  class=\"docs-md__a\">map</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ChoresListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  chores = [<span class=\"hljs-string\">'clean'</span>, <span class=\"hljs-string\">'write more unit tests'</span>]);\n\n  @map(<span class=\"hljs-string\">'chores'</span>)\n  loudChores(chore, index) {\n    <span class=\"hljs-keyword\">return</span> chore.toUpperCase() + <span class=\"hljs-string\">'!'</span>;\n  } <span class=\"hljs-comment\">// ['CLEAN!', 'WRITE MORE UNIT TESTS!']</span>\n\n  <span class=\"hljs-comment\">// alternative syntax:</span>\n\n  @map(<span class=\"hljs-string\">'chores'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chore, index</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> chore.toUpperCase() + <span class=\"hljs-string\">'!'</span>;\n  }) loudChores; <span class=\"hljs-comment\">// ['CLEAN!', 'WRITE MORE UNIT TESTS!']</span>\n}</code></pre></div>","lineNumber":403,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey?","description":"Key for the array to map over","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"callback?","description":"Function to map over the array","type":" (item: any, index: number, array: any[]) => any"}],"exportType":"named"},{"name":"mapBy","description":"<div class=\"docs-md\"><p>Returns an array mapped to the specified key.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/mapBy\"  class=\"docs-md__a\">mapBy</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PeopleListComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  people = [\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"George\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">5</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Stella\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">10</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Violet\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">7</span>}\n  ];\n\n  @mapBy(<span class=\"hljs-string\">'people'</span>, <span class=\"hljs-string\">'age'</span>) ages; <span class=\"hljs-comment\">// [5, 10, 7]</span>\n}</code></pre></div>","lineNumber":427,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the array to map over","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"propertyKey","description":"Property of the array items to map by","type":"string"}],"exportType":"named"},{"name":"match","description":"<div class=\"docs-md\"><p>A computed property which matches the original value for the dependent\nproperty against a given RegExp, returning <code>true</code> if they values matches\nthe RegExp and <code>false</code> if it does not.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/match\"  class=\"docs-md__a\">match</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">IsEmailValidComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  email = <span class=\"hljs-string\">'tomster@emberjs.com'</span>;\n\n  @match(<span class=\"hljs-string\">'email'</span>, /^.+@.+\\..+$/) validEmail;\n}</code></pre></div>","lineNumber":449,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"The property to match","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"pattern","description":"The pattern to match against","type":"RegExp"}],"exportType":"named"},{"name":"max","description":"<div class=\"docs-md\"><p>A computed property that calculates the maximum value in the dependent array.\nThis will return <code>-Infinity</code> when the dependent array is empty.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/max\"  class=\"docs-md__a\">max</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MaxValueComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  values = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>];\n\n  @max(<span class=\"hljs-string\">'values'</span>) maxValue; <span class=\"hljs-comment\">// 10</span>\n}</code></pre></div>","lineNumber":469,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"number","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the array to find the max value of","type":"string"}],"exportType":"named"},{"name":"min","description":"<div class=\"docs-md\"><p>A computed property that calculates the minimum value in the dependent array.\nThis will return <code>Infinity</code> when the dependent array is empty.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/min\"  class=\"docs-md__a\">min</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MinValueComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  values = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>];\n\n  @min(<span class=\"hljs-string\">'values'</span>) minValue; <span class=\"hljs-comment\">// 1</span>\n}</code></pre></div>","lineNumber":489,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"number","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the array to find the max value of","type":"string"}],"exportType":"named"},{"name":"none","description":"<div class=\"docs-md\"><p>A computed property that returns true if the value of the dependent property\nis null or undefined.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/none\"  class=\"docs-md__a\">none</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">NameDisplayComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  firstName = <span class=\"hljs-literal\">null</span>;\n\n  @none(<span class=\"hljs-string\">'firstName'</span>) isNameless; <span class=\"hljs-comment\">// true unless firstName is defined</span>\n}</code></pre></div>","lineNumber":509,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to check","type":"string"}],"exportType":"named"},{"name":"not","description":"<div class=\"docs-md\"><p>A computed property that returns the inverse boolean value of the original\nvalue for the dependent property.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/not\"  class=\"docs-md__a\">not</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserInfoComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  loggedIn = <span class=\"hljs-literal\">false</span>;\n\n  @not(<span class=\"hljs-string\">'loggedIn'</span>) isAnonymous; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":529,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to `not`","type":"string"}],"exportType":"named"},{"name":"notEmpty","description":"<div class=\"docs-md\"><p>A computed property that returns <code>true</code> if the value of the dependent property\nis NOT null, an empty string, empty array, or empty function.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/notEmpty\"  class=\"docs-md__a\">notEmpty</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GroceryBagComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  groceryBag = [<span class=\"hljs-string\">'milk'</span>, <span class=\"hljs-string\">'eggs'</span>, <span class=\"hljs-string\">'apples'</span>];\n\n  @notEmpty(<span class=\"hljs-string\">'groceryBag'</span>) hasGroceriesToPutAway; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":549,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to check","type":"string"}],"exportType":"named"},{"name":"oneWay","description":"<div class=\"docs-md\"><p>Where <code>@alias</code> aliases <code>get</code> and <code>set</code>, and allows for bidirectional\ndata flow, <code>@oneWay</code> only provides an aliased <code>get</code>. Setting the\nproperty removes the alias and causes it to be overridden entirely. This means\nthat the property will not update any longer once it has been set once, making\nit a one way trap.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/oneWay\"  class=\"docs-md__a\">oneWay</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  firstName = <span class=\"hljs-string\">'Joe'</span>;\n\n  @oneWay(<span class=\"hljs-string\">'firstName'</span>) originalName; <span class=\"hljs-comment\">// 'Joe'</span>\n}</code></pre></div>","lineNumber":572,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to alias","type":"string"}],"exportType":"named"},{"name":"or","description":"<div class=\"docs-md\"><p>A computed property which performs a logical or on the original values for the\nprovided dependent properties.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/or\"  class=\"docs-md__a\">or</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">OutfitFeaturesComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  hasJacket = <span class=\"hljs-literal\">true</span>;\n  hasUmbrella = <span class=\"hljs-literal\">false</span>;\n\n  @or(<span class=\"hljs-string\">'hasJacket'</span>, <span class=\"hljs-string\">'hasUmbrella'</span>) isReadyForRain; <span class=\"hljs-comment\">// true</span>\n}</code></pre></div>","lineNumber":594,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"boolean","description":"","properties":[]},"params":[{"nullable":null,"spread":true,"optional":false,"name":"dependentKey","description":"Key for the properties to `or`","type":"...string"}],"exportType":"named"},{"name":"reads","description":"<div class=\"docs-md\"><p>Where <code>@alias</code> aliases <code>get</code> and <code>set</code>, and allows for bidirectional\ndata flow, <code>@reads</code> only provides an aliased <code>get</code>. Setting the\nproperty removes the alias and causes it to be overridden entirely. This means\nthat the property will not update any longer once it has been set once, making\nit a one way trap.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/reads\"  class=\"docs-md__a\">reads</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  firstName = <span class=\"hljs-string\">'Joe'</span>;\n\n  @reads(<span class=\"hljs-string\">'firstName'</span>) originalName; <span class=\"hljs-comment\">// 'Joe'</span>\n}</code></pre></div>","lineNumber":617,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to alias","type":"string"}],"exportType":"named"},{"name":"readOnly","description":"<div class=\"docs-md\"><p>A computed property which creates a one way read-only alias to the original\nvalue for property. Where <code>@alias</code> aliases <code>get</code> and <code>set</code>, and\n<code>@reads</code> aliases get but can be overridden when set, <code>@readOnly</code>\nprovides a read only one way binding that will throw if a set is attempted.\nVery often when using <code>@reads</code> one wants to explicitly prevent users from ever\nsetting the property. This prevents the reverse flow, and also throws an\nexception when it occurs.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/readOnly\"  class=\"docs-md__a\">readOnly</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserProfileComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  first = <span class=\"hljs-string\">'Tomster'</span>;\n\n  @readOnly(<span class=\"hljs-string\">'first'</span>) firstName;\n}</code></pre></div>","lineNumber":642,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key for the property to read","type":"string"}],"exportType":"named"},{"name":"setDiff","description":"<div class=\"docs-md\"><p>A computed property which returns a new array with all the properties from the\nfirst dependent array that are not in the second dependent array.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/setDiff\"  class=\"docs-md__a\">setDiff</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FavoriteThingsComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  likes = [ <span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'puppies'</span>, <span class=\"hljs-string\">'pizza'</span> ];\n  foods = [<span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'pizza'</span>];\n\n  @setDiff(<span class=\"hljs-string\">'likes'</span>, <span class=\"hljs-string\">'foods'</span>) favoriteThingsThatArentFood; <span class=\"hljs-comment\">// ['puppies']</span>\n}</code></pre></div>","lineNumber":664,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"setAProperty","description":"Key for the first set","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"setBProperty","description":"Key for the first set","type":"string"}],"exportType":"named"},{"name":"sort","description":"<div class=\"docs-md\"><p>A computed property which returns a new array with all the properties from\nthe first dependent array sorted based on a property or sort function.</p>\n<p>If a callback method is provided, it should have the following signature:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\">(itemA: any, <span class=\"hljs-attr\">itemB</span>: any) =&gt; number;</code></pre>\n<ul>\n<li><code>itemA</code> the first item to compare.</li>\n<li><code>itemB</code> the second item to compare.</li>\n</ul>\n<p>This function should return negative number (e.g. <code>-1</code>) when <code>itemA</code> should\ncome before <code>itemB</code>. It should return positive number (e.g. <code>1</code>) when\n<code>itemA</code> should come after <code>itemB</code>. If the <code>itemA</code> and <code>itemB</code> are equal this\nfunction should return <code>0</code>.</p>\n<p>Therefore, if this function is comparing some numeric values, you can do\n<code>itemA - itemB</code> or <code>itemA.foo - itemB.foo</code> instead of explicit if statements.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SortNamesComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  names = [{<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'Link'</span>},{<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'Zelda'</span>},{<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'Ganon'</span>},{<span class=\"hljs-attr\">name</span>:<span class=\"hljs-string\">'Navi'</span>}];\n\n  <span class=\"hljs-comment\">// sortDefinition syntax:</span>\n\n  sorts = <span class=\"hljs-built_in\">Object</span>.freeze([<span class=\"hljs-string\">'name:asc'</span>]);\n  @sort(<span class=\"hljs-string\">'names'</span>, <span class=\"hljs-string\">'sorts'</span>)\n  sortedNames; <span class=\"hljs-comment\">// [{name:'Ganon'},{name:'Link'},{name:'Navi'},{name:'Zelda'}]</span>\n\n  <span class=\"hljs-comment\">// sort function syntax:</span>\n\n  @sort(<span class=\"hljs-string\">'names'</span>)\n  sortedNames(a, b){\n    <span class=\"hljs-keyword\">if</span> (a.name &gt; b.name) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a.name &lt; b.name) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n  } <span class=\"hljs-comment\">// [{ name:'Ganon' }, { name:'Link' }, { name:'Navi' }, { name:'Zelda' }]</span>\n\n  <span class=\"hljs-comment\">// alternative syntax:</span>\n\n  @sort(<span class=\"hljs-string\">'names'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>)</span>{\n    <span class=\"hljs-keyword\">if</span> (a.name &gt; b.name) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (a.name &lt; b.name) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>;\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n  }) sortedNames; <span class=\"hljs-comment\">// [{ name:'Ganon' }, { name:'Link' }, { name:'Navi' }, { name:'Zelda' }]</span>\n}</code></pre>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/sort\"  class=\"docs-md__a\">sort</a> macro.</p></div>","lineNumber":730,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"The key for the array that should be sorted","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"sortDefinition?","description":"Sorting function or sort descriptor","type":"string | (itemA: any, itemB: any) => number"}],"exportType":"named"},{"name":"sum","description":"<div class=\"docs-md\"><p>A computed property that returns the sum of the values in the dependent array.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/sum\"  class=\"docs-md__a\">sum</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SumValuesComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  values = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>];\n\n  @sum(<span class=\"hljs-string\">'values'</span>) total; <span class=\"hljs-comment\">// 6</span>\n}</code></pre></div>","lineNumber":749,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"number","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key of the array to sum up","type":"string"}],"exportType":"named"},{"name":"union","description":"<div class=\"docs-md\"><p>Alias for <a href=\"#uniq\"  class=\"docs-md__a\">uniq</a>.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/union\"  class=\"docs-md__a\">union</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">LikesAndFoodsComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  likes = [ <span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'puppies'</span>, <span class=\"hljs-string\">'pizza'</span> ];\n  foods = [<span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'pizza'</span>, <span class=\"hljs-string\">'ramen'</span>];\n\n  @union(<span class=\"hljs-string\">'likes'</span>, <span class=\"hljs-string\">'foods'</span>) favorites; <span class=\"hljs-comment\">// ['tacos', 'puppies', 'pizza', 'ramen']</span>\n}</code></pre></div>","lineNumber":769,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":true,"optional":false,"name":"dependentKeys","description":"Keys of the arrays to union","type":"...string"}],"exportType":"named"},{"name":"uniq","description":"<div class=\"docs-md\"><p>A computed property which returns a new array with all the unique elements from one or more dependent arrays.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/uniq\"  class=\"docs-md__a\">uniq</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FavoriteThingsComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  likes = [ <span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'puppies'</span>, <span class=\"hljs-string\">'pizza'</span> ];\n  foods = [<span class=\"hljs-string\">'tacos'</span>, <span class=\"hljs-string\">'pizza'</span>, <span class=\"hljs-string\">'ramen'</span>];\n\n  @uniq(<span class=\"hljs-string\">'likes'</span>, <span class=\"hljs-string\">'foods'</span>) favorites; <span class=\"hljs-comment\">// ['tacos', 'puppies', 'pizza', 'ramen']</span>\n}</code></pre></div>","lineNumber":789,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key of the array to uniq","type":"string"}],"exportType":"named"},{"name":"uniqBy","description":"<div class=\"docs-md\"><p>A computed property which returns a new array with all the unique elements\nfrom an array, with uniqueness determined by a specific key.</p>\n<p>Equivalent to the Ember <a href=\"https://emberjs.com/api/ember/3.1/functions/@ember%2Fobject%2Fcomputed/uniqBy\"  class=\"docs-md__a\">uniqBy</a> macro.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">FruitBowlComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  fruits = [\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'banana'</span>, <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">'yellow'</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'apple'</span>,  <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">'red'</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'kiwi'</span>,   <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">'brown'</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'cherry'</span>, <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">'red'</span> },\n    { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'lemon'</span>,  <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">'yellow'</span> }\n  ];\n\n  @uniqBy(<span class=\"hljs-string\">'fruits'</span>, <span class=\"hljs-string\">'color'</span>) oneOfEachColor;\n  <span class=\"hljs-comment\">// [</span>\n  <span class=\"hljs-comment\">//  { name: 'banana', color: 'yellow'},</span>\n  <span class=\"hljs-comment\">//  { name: 'apple',  color: 'red'},</span>\n  <span class=\"hljs-comment\">//  { name: 'kiwi',   color: 'brown'}</span>\n  <span class=\"hljs-comment\">// ]</span>\n}</code></pre></div>","lineNumber":821,"access":"public","tags":[],"file":"@ember-decorators/object/computed","returns":{"type":"any[]","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"dependentKey","description":"Key of the array to uniq","type":"string"},{"nullable":null,"spread":false,"optional":false,"name":"propertyKey","description":"Key of the property on the objects of the array to determine uniqueness by","type":"string"}],"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"@ember-decorators/service","attributes":{"file":"@ember-decorators/service","functions":[{"name":"inject","description":"<div class=\"docs-md\"><p>Decorator that injects a service into the object as the decorated property</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedjavascript\"><span class=\"hljs-keyword\">import</span> Component <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember/component'</span>;\n<span class=\"hljs-keyword\">import</span> { inject <span class=\"hljs-keyword\">as</span> service } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@ember-decorators/service'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StoreInjectedComponent</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span>\n  @<span class=\"hljs-title\">service</span> <span class=\"hljs-title\">store</span></span>;\n}</code></pre></div>","lineNumber":20,"access":"public","tags":[],"file":"@ember-decorators/service","returns":{"type":"Service","description":"","properties":[]},"params":[{"nullable":null,"spread":false,"optional":false,"name":"serviceName?","description":"The name of the service to inject. If not provided, the property name will be used","type":"string"}],"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}]}
